# (c) Cartesi and individual authors (see AUTHORS)
# SPDX-License-Identifier: Apache-2.0 (see LICENSE)

## dapp deployment paramaters
##
dapp:
  # -- the complete image name, e.g. "cartesi/dapp:echo-python-0.8.0-server"
  # (REQUIRED)
  image:
  # -- the contract address of the dapp deployed on the blockchain
  # (REQUIRED)
  contractAddress:
  # -- the block hash of the block where the dapp was deployed
  # (REQUIRED)
  blockHash:
  # -- the block number of the block where the dapp was deployed
  # (REQUIRED)
  blockNumber:
  # -- dapp.transactionHash is the transaction hash of the transaction that deployed the dapp
  # (REQUIRED)
  transactionHash:

  # -- mnemonic defines the configuration for the mnemonic
  # use value or secretRef, never both
  mnemonic:
    # -- the 12 words mnemonic for the wallet
    # a secret will be created with its content
    value:
    # -- the name of the secret that should exist in the same namespace
    # the secret MUST contain a mnemonic element like `{"mnemonic":"twelve words ..."}`
    secretRef:
  # -- the URL for the http:// endpoint of the provider
  # (REQUIRED)
  httpProvider:
  # -- the URL for the ws:// endpoint of the provider
  # (REQUIRED)
  wsProvider:
  # -- sthe name of the network the dapp is deployed on
  # (REQUIRED)
  # Available options are:
  #   - mainnet
  #   - goerli
  #   - bsc-testnet
  #   - avalanche-fuji
  #   - polygon-mumbai
  #   - optimism-goerli
  #   - arbitrum-goerli
  #   - chiado
  #   - localhost
  network:

## cartesi holds the configuration for the default containers images
##
global:
  image:
    # -- Global Docker image registry
    registry: docker.io
    # -- Global Docker Image tag
    tag: 0.9.1

## seviceAccount configuration to be used by the rollups-validator-node
##
serviceAccount:
  # -- defines whether a service account should be created
  create: false
  # -- defines the annotations to add to the service account
  annotations: {}
  # -- defines the name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- String to fully override name
fullnameOverride: ""
# -- String to partially override  name
nameOverride: ""

## image configuration to be used by the rollups-validator-node
##
image:
  # -- Pullpolicy for Docker Images
  pullPolicy: Always
  # -- Cartesi Rollups Validator Nodes pull secrets
  pullSecrets: []

## ingress defines whether an Ingress will be created for the dapp
## The default Ingress has a default path / that points to the endpoints.graphqlServer
## And an /inspect path that points to the endpoints.inspectServer
## The dapp.contractAddress is used a a hostname suffixed by the ingress.subDomain
## e.g.
## host: 0xabcde.local
##
ingress:
  # -- Specifies whether a Ingress should be created
  enabled: false
  # -- Ingress Sub domain name
  subDomain: "local"
  ## ingress.addReleaseNameCNAME adds the helm release name to the ingress as an additional rules[].host: {}
  ## You should be careful to use a release name that's safe to use as a hostname
  ## e.g. "my-release-name"
  ## You shouldn't use "_" as a character in a hostname
  # -- dditional rules[].host
  addReleaseNameAsHost: false
  # -- defines the annotations for ingresses
  annotations: {}

## extraDeploy Extra objects to deploy (value evaluated as a template)
# -- Array of extra objects to deploy with the release
extraDeploy: []

## rollups-validator-node Pod configuration
##
validator:
  # -- Node labels for validator pods assignment
  nodeSelector: {}

  # -- Tolerations for validator pods assignment
  tolerations: []

  # -- Affinity for validator pods assignment
  affinity: {}

  # -- add additional init containers to the validator-node pod(s)
  ## Example
  ##
  ## initContainers:
  ##   - name: do-something
  ##     image: busybox
  ##     command: ['do', 'something']
  ##
  initContainers: []

  # -- validator replicas pod's Security Context
  podSecurityContext:
    {}
    ## fsGroup: 2000

  # -- Annotations for Validator replicas pods
  podAnnotations: {}

  # -- Optionally specify extra list of additional volumes for the validator pod(s)
  extraVolumes: []

  localnode:
    # -- Specify whether to use localnode or not
    enabled: false
    storage:
      # -- PVC for localnode blockchain data
      blockchainData:
        # -- Persistent Volume storage class for localnode blockchain data
        storageClass: standard
        # -- Persistent Volume storage size for localnode blockchain data
        size: 2Gi
      # -- PVC for loaclnode rollups deployment
      deployments:
        # -- Persistent Volume storage class for localnode rollups deployment
        storageClass: standard
        # -- Persistent Volume storage size for localnode rollups deployment
        size: 1Gi
      # -- PVC for localnode shared machine snapshot
      machineSnapshots:
        # -- Persistent Volume storage class for localnode shared machine snapshot
        storageClass: standard
        # -- Persistent Volume storage size for localnode shared machine snapshot
        size: 2Gi

    service:
      # -- localnode service type
      type: ClusterIP
      # -- localnode service port
      port: 8545

    anvil:
      # -- Set the anvil docker image
      image:
        registry:
        repository: sunodo/anvil
        tag: 2.0.0
        digest:

      # -- Override default container command (useful when using custom images)
      command: []
      # -- Override default container args (useful when using custom images)
      args:
        - anvil
        - --block-time
        - "5"
        - --load-state
        - /opt/cartesi/share/deployments/anvil_state.json
      # -- Extra arguments for anvil
      extraArgs: []

      # -- Array with extra environment variables to add to validator.anvil container
      # e.g:
      # extraEnvVars:
      #   - name: FOO
      #     value: "bar"
      extraEnvVars: []

      # -- Name of existing ConfigMap containing extra env vars for anvil container
      extraEnvVarsCM: ""

      # -- Name of existing Secret containing extra env vars for anvil container
      extraEnvVarsSecret: ""

      # -- Set anvil container Security Context
      securityContext:
        {}
        ## capabilities:
        ##   drop:
        ##   - ALL
        ## readOnlyRootFilesystem: true
        ## runAsNonRoot: true
        ## runAsUser: 1000

      # -- Set anvil container resources
      resources:
        {}
        ## limits:
        ##   cpu: 100m
        ##   memory: 128Mi
        ## requests:
        ##   cpu: 100m
        ##   memory: 128Mi

      # -- Optionally specify extra list of additional volumeMounts for the anvil container(s)
      ##
      extraVolumeMounts: []


    deployer:
      # -- Set the deployer docker image
      image:
        registry:
        repository: cartesi/rollups-cli
        tag:
        digest:

      # -- Override default container command (useful when using custom images)
      command: []
      # -- Override default container args (useful when using custom images)
      args: []
      # -- Extra arguments for deployer
      extraArgs: []

      # -- Array with extra environment variables to add to validator.deployer container
      # e.g:
      # extraEnvVars:
      #   - name: FOO
      #     value: "bar"
      extraEnvVars: []

      # -- Name of existing ConfigMap containing extra env vars for deployer container
      extraEnvVarsCM: ""

      # -- Name of existing Secret containing extra env vars for deployer container
      extraEnvVarsSecret: ""

      # -- Set deployer container Security Context
      securityContext:
        {}
        ## capabilities:
        ##   drop:
        ##   - ALL
        ## readOnlyRootFilesystem: true
        ## runAsNonRoot: true
        ## runAsUser: 1000

      # -- Set deployer container resources
      resources:
        {}
        ## limits:
        ##   cpu: 100m
        ##   memory: 128Mi
        ## requests:
        ##   cpu: 100m
        ##   memory: 128Mi

      # -- Optionally specify extra list of additional volumeMounts for the deployer container(s)
      extraVolumeMounts: []

  dispatcher:
    # -- Set the dispatcher docker image
    image:
      registry:
      repository: cartesi/rollups-dispatcher
      tag:
      digest:

    # -- The RUST_LOG level can be set to trace, debug, info, warn, error, or off.
    logLevel: info

    # -- dispatcher healthcheck
    healthCheck:
      enabled: false
      port:

    # -- Override default container command (useful when using custom images)
    command: []

    # -- Override default container args (useful when using custom images)
    args: []

    # -- Extra arguments for dispatcher
    extraArgs: []

    # -- Array with extra environment variables to add to validator.dispatcher container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    # -- Name of existing ConfigMap containing extra env vars for dispatcher container
    ##
    extraEnvVarsCM: ""

    # -- Name of existing Secret containing extra env vars for dispatcher container
    ##
    extraEnvVarsSecret: ""

    # -- Set dispatcher container Security Context
    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    # -- Set dispatcher container resources
    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    # -- Optionally specify extra list of additional volumeMounts for the dispatcher container(s)
    extraVolumeMounts: []

  stateServer:
    # -- Set the stateServer docker image
    image:
      registry:
      repository: cartesi/rollups-state-server
      tag:
      digest:

    # -- The RUST_LOG level can be set to trace, debug, info, warn, error, or off.
    logLevel: info

    # -- Override default container command (useful when using custom images)
    command: []

    # -- Override default container args (useful when using custom images)
    args: []

    # -- Extra arguments for StateServer
    extraArgs: []

    # -- Array with extra environment variables to add to validator.stateServer container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    # -- Name of existing ConfigMap containing extra env vars for stateServer container
    extraEnvVarsCM: ""

    # -- Name of existing Secret containing extra env vars for stateServer container
    extraEnvVarsSecret: ""

    # -- Set StateServer container Security Context
    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    # -- Set StateServer container resources
    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    # -- Optionally specify extra list of additional volumeMounts for the stateServer container(s)
    extraVolumeMounts: []

  indexer:
    postgresEndpoint: postgresql://postgres:postgres@database:5432/postgres
    # -- Set the indexer docker image
    image:
      registry:
      repository: cartesi/rollups-indexer
      tag:
      digest:

    # -- The RUST_LOG level can be set to trace, debug, info, warn, error, or off.
    logLevel: info

    # -- indexer healthcheck
    healthCheck:
      enabled: false
      port:

    # -- Override default container command (useful when using custom images)
    command: []

    # -- Override default container args (useful when using custom images)
    args: []

    # -- Extra arguments for indexer
    extraArgs: []

    # -- Array with extra environment variables to add to validator.indexer container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    # -- Name of existing ConfigMap containing extra env vars for indexer container
    ##
    extraEnvVarsCM: ""

    # -- Name of existing Secret containing extra env vars for indexer container
    ##
    extraEnvVarsSecret: ""

    # -- Set indexer container Security Context
    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    # -- Set indexer container resources
    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    # -- Optionally specify extra list of additional volumeMounts for the indexer container(s)
    ##
    extraVolumeMounts: []

## rollups-validator-node-server-manager Pod configuration
##
serverManager:
  # -- Node labels for pods assignment
  nodeSelector: {}

  # -- Tolerations for pods assignment
  tolerations: []

  # -- Affinity for pods assignment
  affinity: {}

  # -- additional init containers to the ServerManager pod(s)
  ## Example
  ##
  ## initContainers:
  ##   - name: do-something
  ##     image: busybox
  ##     command: ['do', 'something']
  ##
  initContainers: []

  # -- Set serverManager replicas pod's Security Context
  podSecurityContext:
    {}
    ## fsGroup: 2000

  # -- Annotations for serverManager replicas pods
  podAnnotations: {}

  ## serverManager.extraVolumes Optionally specify extra list of additional volumes for the serverManager pod(s)
  ##
  extraVolumes: []

  # -- set SERVER_MANAGER_LOG_LEVEL env, can be set to trace, debug, info, warning, error, and fatal.
  logLevel: info

  # -- Override default container command (useful when using custom images)
  command: []

  # -- Override default container args (useful when using custom images)
  args:
    - "/opt/cartesi/bin/server-manager"
    - "--manager-address=0.0.0.0:5001"

  # -- Extra arguments for serverManager
  extraArgs: []

  # -- Name of existing ConfigMap containing extra env vars for serverManager container
  extraEnvVarsCM: ""

  # -- Name of existing Secret containing extra env vars for serverManager container
  extraEnvVarsSecret: ""

  remoteCartesiMachine:
    # -- Set REMOTE_CARTESI_MACHINE_LOG_LEVEL env, can be set to trace, debug, info, warning, error, and fatal.
    # defaults to serverManager.logLevel unless you provide a different value
    logLevel:

  advanceRunner:
    # -- Set the advanceRunner docker image
    image:
      registry:
      repository: cartesi/rollups-advance-runner
      tag:
      digest:

    # -- Set RUST_LOG env, can be trace, debug, info, warn, error, or off.
    logLevel: info

    # -- advanceRunner healthcheck
    healthCheck:
      enabled: false
      port:

    # -- verride default container command (useful when using custom images)
    command: []

    # -- Override default container args (useful when using custom images)
    args: []

    # -- Extra arguments for advanceRunner
    extraArgs: []

    # -- Array with extra environment variables to add to serverManager.advanceRunner container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    # -- Name of existing ConfigMap containing extra env vars for advanceRunner container
    extraEnvVarsCM: ""

    # -- Name of existing Secret containing extra env vars for advanceRunner container
    extraEnvVarsSecret: ""

    # -- Set advanceRunner container Security Context
    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    # -- Set advanceRunner container resources
    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    # -- Optionally specify extra list of additional volumeMounts for the serverManager.advanceRunner container(s)
    extraVolumeMounts: []

  # -- Array with extra environment variables to add to serverManager container
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []

  service:
    # -- serverManager service type
    type: ClusterIP
    # -- serverManager service port
    port: 5001

  # -- Set serverManager container Security Context
  securityContext:
    {}
    ## capabilities:
    ##   drop:
    ##   - ALL
    ## readOnlyRootFilesystem: true
    ## runAsNonRoot: true
    ## runAsUser: 1000

  # -- Set serverManager container resources
  resources:
    {}
    ## limits:
    ##   cpu: 100m
    ##   memory: 128Mi
    ## requests:
    ##   cpu: 100m
    ##   memory: 128Mi

  # -- Optionally specify extra list of additional volumeMounts for the serverManager container(s)
  extraVolumeMounts: []

## rollups-validator-node-endpoints Pod configuration
##
endpoints:
  # -- Number of endpoints replicas to deploy
  replicaCount: 1

  # -- Node labels for pods assignment
  nodeSelector: {}

  # -- Tolerations for pods assignment
  tolerations: []

  # -- Affinity for pods assignment
  affinity: {}

  # -- Add additional init containers to the endpoints pod(s)
  ## Example
  ##
  ## initContainers:
  ##   - name: do-something
  ##     image: busybox
  ##     command: ['do', 'something']
  ##
  initContainers: []

  # -- Set endpoints replicas pod's Security Context
  podSecurityContext:
    {}
    ## fsGroup: 2000

  # -- Annotations for endpoints replicas pods
  podAnnotations: {}

  # -- Optionally specify extra list of additional volumes for the endpoints pod(s)
  ##
  extraVolumes: []

  inspectServer:
    # -- Set the inspectServer docker image
    image:
      registry:
      repository: cartesi/rollups-inspect-server
      tag:
      digest:

    # -- The RUST_LOG level can be set to trace, debug, info, warn, error, or off.
    logLevel: info

    # -- Override default container command (useful when using custom images)
    command: []

    # -- Override default container args (useful when using custom images)
    args: []

    # -- Extra arguments for inspectServer
    extraArgs: []

    # -- extraEnvVars Array with extra environment variables to add to endpoints.inspectServer container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    # -- extraEnvVarsCM Name of existing ConfigMap containing extra env vars for inspectServer container
    extraEnvVarsCM: ""

    # -- extraEnvVarsSecret Name of existing Secret containing extra env vars for inspectServer container
    extraEnvVarsSecret: ""

    # -- Set inspectServer container Security Context
    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    ingress:
      # -- defines extra anotations
      # specifically for the endpoints.inspectServer.service
      annotations: {}

    service:
      # -- inspectServer service type
      type: ClusterIP
      # -- inspectServer service port
      port: 5005

    # -- Set inspectServer container resources
    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    # -- Optionally specify extra list of additional volumeMounts for the endpoints.inspectServer container(s)
    extraVolumeMounts: []

  graphqlServer:
    # -- Set the graphqlServer docker image
    image:
      registry:
      repository: cartesi/rollups-graphql-server
      tag:
      digest:

    # -- The RUST_LOG level can be set to trace, debug, info, warn, error, or off.
    logLevel: info

    # -- Override default container command (useful when using custom images)
    command: []

    # -- Override default container args (useful when using custom images)
    args: []

    # -- Extra arguments for graphqlServer
    extraArgs: []

    # -- Array with extra environment variables to add to endpoints.graphqlServer container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    # -- Name of existing ConfigMap containing extra env vars for graphqlServer container
    extraEnvVarsCM: ""

    # -- Name of existing Secret containing extra env vars for graphqlServer container
    extraEnvVarsSecret: ""

    # -- Set graphqlServer container Security Context
    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    ingress:
      # -- defines extra anotations
      # specifically for the endpoints.graphqlServer.service
      annotations: {}

    service:
      # -- graphqlServer service type
      type: ClusterIP
      # -- graphqlServer service port
      port: 4000

    # -- Set graphqlServer container resources
    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    # -- Optionally specify extra list of additional volumeMounts for the endpoints.graphqlServer container(s)
    extraVolumeMounts: []

## redis configuration
redis:
  # -- Use bitnami Redis&reg; pod.
  enabled: true
  # -- redis.endpoint: e.g.: redis://localhost:6379
  # REQUIRED if you disabled redis
  endpoint:
  image:
    # -- Redis&reg; docker image tag.
    tag: 6.2-debian-11
  # -- Redis&reg; architecture. Allowed values: `standalone` or `replication`
  architecture: standalone
  auth:
    # -- Redis&reg; Enable password authentication
    enabled: false
  metrics:
    # -- sidecar prometheus exporter to expose Redis&reg; metrics
    enabled: true

## PostgreSQL configuration
postgresql:
  # -- Use bitnami postgreSQL pod.
  enabled: true
  # -- Set bitnami postgreSQL`username`, `password`,`database`
  auth:
    username: rollups
    password: rollups
    database: rollups
    hostname:
    port: 5432
  image:
    # -- bitnami postgreSQL docker image tag.
    tag: 13.9.0-debian-11-r27
