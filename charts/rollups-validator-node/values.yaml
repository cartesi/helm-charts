# (c) Cartesi and individual authors (see AUTHORS)
# SPDX-License-Identifier: Apache-2.0 (see LICENSE)

## dapp deployment paramaters
##
dapp:
  ## dapp.image is a complete image name, e.g. "cartesi/dapp:echo-python-0.8.0-server"
  ## REQUIRED
  image:
  ## dapp.contractAddress is the contract address of the dapp deployed on the blockchain
  ## REQUIRED
  contractAddress:
  ## dapp.blockHash is the block hash of the block where the dapp was deployed
  ## REQUIRED
  blockHash:
  ## dapp.blockNumber is the block number of the block where the dapp was deployed
  ## REQUIRED
  blockNumber:
  ## dapp.transactionHash is the transaction hash of the transaction that deployed the dapp
  ## REQUIRED
  transactionHash:

  ## mnemonic defines the configuration for the mnemonic
  ## use value or secretRef, never both
  mnemonic:
    ## dapp.mnemonic.value is the 12 words mnemonic for the wallet
    ## a secret will be created with its content
    value:
    ## dapp.mnemonic.secretRef is the name of the secret that should exist in the same namespace
    ## the secret MUST contain a mnemonic element like `{"mnemonic":"twelve words ..."}`
    secretRef:
  ## dapp.httpProvider is the URL for the http:// endpoint of the provider
  ## REQUIRED
  httpProvider:
  ## dapp.wsProvider is the URL for the ws:// endpoint of the provider
  ## REQUIRED
  wsProvider:
  ## dapp.network is the name of the network the dapp is deployed on
  ## REQUIRED
  ##
  ## Available options are:
  ##   - mainnet
  ##   - goerli
  ##   - bsc-testnet
  ##   - avalanche-fuji
  ##   - polygon-mumbai
  ##   - optimism-goerli
  ##   - arbitrum-goerli
  ##   - chiado
  network:

## cartesi holds the configuration for the default containers images
##
global:
  image:
    registry: docker.io
    tag: 0.9.1

## seviceAccount configuration to be used by the rollups-validator-node
##
serviceAccount:
  ## serviceAccount.create defines whether a service account should be created
  create: false
  ## serviceAccount.annottions defines the annotations to add to the service account
  annotations: {}
  ## serviceAccount.name defines the name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  name: ""

fullnameOverride: ""
nameOverride: ""

## image configuration to be used by the rollups-validator-node
##
image:
  pullPolicy: Always
  pullSecrets: []

## ingress defines whether an Ingress will be created for the dapp
## The default Ingress has a default path / that points to the endpoints.graphqlServer
## And an /inspect path that points to the endpoints.inspectServer
## The dapp.contractAddress is used a a hostname suffixed by the ingress.subDomain
## e.g.
## host: 0xabcde.local
##
ingress:
  enabled: false
  subDomain: "local"
  ## ingress.addReleaseNameCNAME adds the helm release name to the ingress as an additional rules[].host: {}
  ## You should be careful to use a release name that's safe to use as a hostname
  ## e.g. "my-release-name"
  ## You shouldn't use "_" as a character in a hostname
  addReleaseNameAsHost: false
  ## ingress.annotation defines the annotations for both ingresses
  annotations: {}

## extraDeploy Extra objects to deploy (value evaluated as a template)
##
extraDeploy: []

## rollups-validator-node Pod configuration
##
validator:
  nodeSelector: {}

  tolerations: []

  affinity: {}

  ## validator.initContainers add additional init containers to the validator-node pod(s)
  ## Example
  ##
  ## initContainers:
  ##   - name: do-something
  ##     image: busybox
  ##     command: ['do', 'something']
  ##
  initContainers: []

  podSecurityContext:
    {}
    ## fsGroup: 2000

  podAnnotations: {}

  ## validator.extraVolumes Optionally specify extra list of additional volumes for the validator pod(s)
  ##
  extraVolumes: []

  dispatcher:
    image:
      registry:
      repository: cartesi/rollups-dispatcher
      tag:
      digest:

    ## The RUST_LOG level can be set to trace, debug, info, warn, error, or off.
    logLevel: info

    healthCheck:
      enabled: false
      port:

    command: []
    args: []
    extraArgs: []

    ## extraEnvVars Array with extra environment variables to add to validator.dispatcher container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    ## extraEnvVarsCM Name of existing ConfigMap containing extra env vars for dispatcher container
    ##
    extraEnvVarsCM: ""

    ## extraEnvVarsSecret Name of existing Secret containing extra env vars for dispatcher container
    ##
    extraEnvVarsSecret: ""

    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    ## validator.dispacther.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the dispatcher container(s)
    ##
    extraVolumeMounts: []

  stateServer:
    image:
      registry:
      repository: cartesi/rollups-state-server
      tag:
      digest:

    ## The RUST_LOG level can be set to trace, debug, info, warn, error, or off.
    logLevel: info

    command: []
    args: []
    extraArgs: []

    ## extraEnvVars Array with extra environment variables to add to validator.stateServer container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    ## extraEnvVarsCM Name of existing ConfigMap containing extra env vars for stateServer container
    ##
    extraEnvVarsCM: ""

    ## extraEnvVarsSecret Name of existing Secret containing extra env vars for stateServer container
    ##
    extraEnvVarsSecret: ""

    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    ## validator.stateServer.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the stateServer container(s)
    ##
    extraVolumeMounts: []

  indexer:
    postgresEndpoint: postgresql://postgres:postgres@database:5432/postgres

    image:
      registry:
      repository: cartesi/rollups-indexer
      tag:
      digest:

    ## The RUST_LOG level can be set to trace, debug, info, warn, error, or off.
    logLevel: info

    healthCheck:
      enabled: false
      port:

    command: []
    args: []
    extraArgs: []

    ## extraEnvVars Array with extra environment variables to add to validator.indexer container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    ## extraEnvVarsCM Name of existing ConfigMap containing extra env vars for indexer container
    ##
    extraEnvVarsCM: ""

    ## extraEnvVarsSecret Name of existing Secret containing extra env vars for indexer container
    ##
    extraEnvVarsSecret: ""

    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    ## validator.indexer.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the indexer container(s)
    ##
    extraVolumeMounts: []

## rollups-validator-node-server-manager Pod configuration
##
serverManager:
  nodeSelector: {}

  tolerations: []

  affinity: {}

  ## validator.initContainers add additional init containers to the validator-node pod(s)
  ## Example
  ##
  ## initContainers:
  ##   - name: do-something
  ##     image: busybox
  ##     command: ['do', 'something']
  ##
  initContainers: []

  podSecurityContext:
    {}
    ## fsGroup: 2000

  podAnnotations: {}

  storage:
    machineSnapshots:
      storageClass: standard
      size: 2Gi

  ## serverManager.extraVolumes Optionally specify extra list of additional volumes for the serverManager pod(s)
  ##
  extraVolumes: []

  ## serverManager.logLevel set SERVER_MANAGER_LOG_LEVEL env, can be set to trace, debug, info, warning, error, and fatal.
  logLevel: info

  command: []
  args:
    - "/opt/cartesi/bin/server-manager"
    - "--manager-address=0.0.0.0:5001"
  extraArgs: []

  ## extraEnvVarsCM Name of existing ConfigMap containing extra env vars for serverManager container
  ##
  extraEnvVarsCM: ""

  ## extraEnvVarsSecret Name of existing Secret containing extra env vars for serverManager container
  ##
  extraEnvVarsSecret: ""

  remoteCartesiMachine:
    ## serverManager.remoteCartesiMachine.logLevel set REMOTE_CARTESI_MACHINE_LOG_LEVEL env, can be set to trace, debug, info, warning, error, and fatal.
    ## defaults to serverManager.logLevel unless you provide a different value
    logLevel:

  advanceRunner:
    image:
      registry:
      repository: cartesi/rollups-advance-runner
      tag:
      digest:

    ## serverManager.advanceRunner.logLevel sets RUST_LOG env, can be trace, debug, info, warn, error, or off.
    logLevel: info

    healthCheck:
      enabled: false
      port:

    command: []
    args: []
    extraArgs: []

    ## extraEnvVars Array with extra environment variables to add to serverManager.advanceRunner container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    ## extraEnvVarsCM Name of existing ConfigMap containing extra env vars for advanceRunner container
    ##
    extraEnvVarsCM: ""

    ## extraEnvVarsSecret Name of existing Secret containing extra env vars for advanceRunner container
    ##
    extraEnvVarsSecret: ""

    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    ## serverManager.advanceRunner.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the serverManager.advanceRunner container(s)
    ##
    extraVolumeMounts: []

  ## extraEnvVars Array with extra environment variables to add to serverManager container
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []

  service:
    type: ClusterIP
    port: 5001

  securityContext:
    {}
    ## capabilities:
    ##   drop:
    ##   - ALL
    ## readOnlyRootFilesystem: true
    ## runAsNonRoot: true
    ## runAsUser: 1000

  resources:
    {}
    ## limits:
    ##   cpu: 100m
    ##   memory: 128Mi
    ## requests:
    ##   cpu: 100m
    ##   memory: 128Mi
  ## serverManager.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the serverManager container(s)
  ##
  extraVolumeMounts: []

## rollups-validator-node-endpoints Pod configuration
##
endpoints:
  replicaCount: 1

  nodeSelector: {}

  tolerations: []

  affinity: {}

  ## endpoints.initContainers Add additional init containers to the endpoints pod(s)
  ## Example
  ##
  ## initContainers:
  ##   - name: do-something
  ##     image: busybox
  ##     command: ['do', 'something']
  ##
  initContainers: []

  podSecurityContext:
    {}
    ## fsGroup: 2000

  podAnnotations: {}

  ## endpoints.extraVolumes Optionally specify extra list of additional volumes for the endpoints pod(s)
  ##
  extraVolumes: []

  inspectServer:
    image:
      registry:
      repository: cartesi/rollups-inspect-server
      tag:
      digest:

    ## The RUST_LOG level can be set to trace, debug, info, warn, error, or off.
    logLevel: info

    command: []
    args: []
    extraArgs: []

    ## extraEnvVars Array with extra environment variables to add to endpoints.inspectServer container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    ## extraEnvVarsCM Name of existing ConfigMap containing extra env vars for inspectServer container
    ##
    extraEnvVarsCM: ""

    ## extraEnvVarsSecret Name of existing Secret containing extra env vars for inspectServer container
    ##
    extraEnvVarsSecret: ""

    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    ingress:
      ## endpoints.inspectServer.ingress.annotations defines extra anotations
      ## specifically for the endpoints.inspectServer.service
      annotations: {}

    service:
      type: ClusterIP
      port: 5005

    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    ## endpoints.inspectServer.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the endpoints.inspectServer container(s)
    ##
    extraVolumeMounts: []

  graphqlServer:
    image:
      registry:
      repository: cartesi/rollups-graphql-server
      tag:
      digest:

    ## The RUST_LOG level can be set to trace, debug, info, warn, error, or off.
    logLevel: info

    command: []
    args: []
    extraArgs: []

    ## extraEnvVars Array with extra environment variables to add to endpoints.graphqlServer container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []

    ## extraEnvVarsCM Name of existing ConfigMap containing extra env vars for graphqlServer container
    ##
    extraEnvVarsCM: ""

    ## extraEnvVarsSecret Name of existing Secret containing extra env vars for graphqlServer container
    ##
    extraEnvVarsSecret: ""

    securityContext:
      {}
      ## capabilities:
      ##   drop:
      ##   - ALL
      ## readOnlyRootFilesystem: true
      ## runAsNonRoot: true
      ## runAsUser: 1000

    ingress:
      ## endpoints.graphqlServer.ingress.annotations defines extra anotations
      ## specifically for the endpoints.graphqlServer.service
      annotations: {}

    service:
      type: ClusterIP
      port: 4000

    resources:
      {}
      ## limits:
      ##   cpu: 100m
      ##   memory: 128Mi
      ## requests:
      ##   cpu: 100m
      ##   memory: 128Mi

    ## endpoints.graphqlServer.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the endpoints.graphqlServer container(s)
    ##
    extraVolumeMounts: []

## redis configuration
redis:
  enabled: true
  ## redis.endpoint: e.g.: redis://localhost:6379
  ## REQUIRED if you disabled redis
  endpoint:
  image:
    tag: 6.2-debian-11
  architecture: standalone
  auth:
    enabled: false
  metrics:
    enabled: true

## PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    username: rollups
    password: rollups
    database: rollups
    hostname:
    port: 5432
  image:
    tag: 13.9.0-debian-11-r27
