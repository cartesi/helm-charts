{{- if .Values.validator.localnode.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "validator.fullname" . }}-localnode-job
  labels: {{- include "validator.labels" . | nindent 4 }}
spec:
  backoffLimit: 6
  activeDeadlineSeconds: 5000
  template:
    metadata:
      name: {{ include "validator.fullname" . }}-localnode-job
      labels:
        rollups.cartesi.io/component: job
    spec:
      restartPolicy: OnFailure
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      serviceAccountName: {{ include "validator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.validator.podSecurityContext | nindent 8 }}
      {{- end }}
      initContainers:
        - name: deployer
          image: {{ include "deployer.image" . }}
          {{- if .Values.validator.localnode.deployer.command }}
          command:
          {{- include "tplvalues.render" (dict "value" .Values.validator.localnode.deployer.command "context" $) | nindent 12 }}
          {{- else }}
          args:
            - create
            - --rpc
            - http://{{ include "validator.fullname" . }}-localnode:8545
            - --deploymentFile
            - /opt/cartesi/share/deployments/localhost.json
            - --mnemonic="test test test test test test test test test test test junk"
            - --templateHashFile
            - /var/opt/cartesi/machine-snapshots/0_0/hash
            - --outputFile
            - /deployments/localhost/dapp.json
            {{- end }}
            {{- range .Values.validator.localnode.deployer.args }}
            - {{ . | quote}}
            {{- end }}
            {{- range .Values.validator.localnode.deployer.extraArgs }}
            - {{ . | quote}}
            {{- end }}
          resources:
            {{- toYaml .Values.validator.localnode.deployer.resources | nindent 12 }}
          env:
            {{- if .Values.validator.localnode.deployer.extraEnvVars }}
            {{- include "tplvalues.render" (dict "value" .Values.validator.localnode.deployer.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.validator.localnode.deployer.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "tplvalues.render" ( dict "value" .Values.validator.localnode.deployer.extraEnvVarsCM "context" $ ) }}
            {{- end }}
            {{- if .Values.validator.localnode.deployer.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "tplvalues.render" ( dict "value" .Values.validator.localnode.deployer.extraEnvVarsSecret "context" $ ) }}
            {{- end }}
          volumeMounts:
            - name: shared-machine-snapshots
              mountPath: /var/opt/cartesi/machine-snapshots
              readOnly: false
            - name: blockchain-data
              mountPath: /opt/cartesi/share/deployments
              readOnly: true
            - name: deployments
              mountPath: /deployments
              readOnly: false
            {{- if .Values.validator.localnode.deployer.extraVolumeMounts }}
            {{- include "tplvalues.render" ( dict "value" .Values.validator.localnode.deployer.extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}
      containers:
        - name: anvil
          image: "nixery.dev/shell"
          command: ["echo", "Anvil Node works correctly!"]
      volumes:
        - name: shared-machine-snapshots
          persistentVolumeClaim:
            claimName: {{ include "validator.fullname" . }}-machine-snapshots-pvc
        - name: blockchain-data
          persistentVolumeClaim:
            claimName: {{ include "validator.fullname" . }}-blockchain-data-pvc
        - name: deployments
          persistentVolumeClaim:
            claimName: {{ include "validator.fullname" . }}-deployments-pvc
{{- end }}