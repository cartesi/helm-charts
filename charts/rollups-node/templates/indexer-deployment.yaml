{{- /*
(c) Cartesi and individual authors (see AUTHORS)
SPDX-License-Identifier: Apache-2.0 (see LICENSE)
*/}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "validator.fullname" . }}-indexer
  labels: {{- include "validator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "validator.selectorLabels" . | nindent 6 }}
      rollups.cartesi.io/component: indexer
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.indexer.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "validator.selectorLabels" . | nindent 8 }}
        rollups.cartesi.io/component: indexer
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "validator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.indexer.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.indexer.initContainers }}
        {{- include "tplvalues.render" ( dict "value" .Values.indexer.initContainers "context" $ ) | nindent 8 }}
        {{- end }}
      containers:
        - name: rollups-indexer
          image: {{ include "indexer.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.indexer.resources | nindent 12 }}
          {{- if .Values.indexer.command }}
          command:
          {{- include "tplvalues.render" (dict "value" .Values.indexer.command "context" $) | nindent 12 }}
          {{- end }}
          args:
            {{- if .Values.indexer.healthCheck.enabled }}
            - {{ print "--healthcheck-port=" (default 8082 .Values.indexer.healthCheck.port) | quote }}
            {{- end }}
            {{- if .Values.validator.localnode.enabled }}
            - --dapp-contract-address-file=/deployments/localhost/dapp.json
            {{- else }}
            - {{ print "--dapp-contract-address=" .Values.dapp.contractAddress | quote }}
            {{- end }}
            {{- if (or .Values.dapp.network .Values.validator.localnode.enabled) }}
            - {{ print "--chain-id=" (include "dapp.chainID" .) | quote }}
            {{- end }}
            - {{ print (include "validator.redisConfig" .) | quote }}
            {{- range .Values.indexer.args }}
            - {{ . | quote}}
            {{- end }}
            {{- range .Values.indexer.extraArgs }}
            - {{ . | quote}}
            {{- end }}
          {{- if .Values.indexer.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ default 8082 .Values.indexer.healthCheck.port }}
            initialDelaySeconds: 3
          {{- end }}
          env:
            - name: RUST_LOG
              value: {{ .Values.indexer.logLevel }}
            {{- if .Values.indexer.extraEnvVars }}
            {{- include "tplvalues.render" (dict "value" .Values.indexer.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
            {{- if .Values.postgresql.enabled }}
            - name: POSTGRES_PASSWORD_FILE
              value: /var/run/secrets/postgres/PASSWORD
            {{- end }}
          envFrom:
          {{- if .Values.postgresql.enabled }}
            - configMapRef:
                name: {{ include "validator.fullname" . }}-database-config
          {{- end }}
          {{- if or .Values.indexer.extraEnvVarsCM .Values.indexer.extraEnvVarsSecret }}
            {{- if .Values.indexer.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "tplvalues.render" ( dict "value" .Values.indexer.extraEnvVarsCM "context" $ ) }}
            {{- end }}
            {{- if .Values.indexer.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "tplvalues.render" ( dict "value" .Values.indexer.extraEnvVarsSecret "context" $ ) }}
            {{- end }}
          {{- end }}
          volumeMounts:
            {{- if .Values.postgresql.enabled }}
            - name: postgres
              mountPath: /var/run/secrets/postgres
              readOnly: true
            {{- end }}
            {{- if .Values.validator.localnode.enabled }}
            - name: blockchain-data
              mountPath: /opt/cartesi/share/blockchain
              readOnly: false
            - name: deployments
              mountPath: /deployments
              readOnly: false
            {{- end }}
            {{- if .Values.indexer.extraVolumeMounts }}
            {{- include "tplvalues.render" ( dict "value" .Values.indexer.extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}

      volumes:
        {{- if .Values.validator.localnode.enabled }}
        - name: blockchain-data
          persistentVolumeClaim:
            claimName: {{ include "validator.fullname" . }}-blockchain-data-pvc
        - name: deployments
          persistentVolumeClaim:
            claimName: {{ include "validator.fullname" . }}-deployments-pvc
        {{- end }}
        - name: dispatcher-lib
          emptyDir: {}
        - name: dapp
          configMap:
            name: "{{ include "validator.fullname" . }}-dapp"
            items:
              - key: "dapp.json"
                path: "dapp.json"
        {{- if (or .Values.dapp.mnemonic.value .Values.validator.localnode.enabled .Values.dapp.mnemonic.secretRef) }}
        - name: mnemonic
          secret:
            {{- if (or .Values.dapp.mnemonic.value .Values.validator.localnode.enabled) }}
            secretName: {{ include "validator.fullname" . }}-mnemonic
            {{- else }}
            secretName: {{ .Values.dapp.mnemonic.secretRef }}
            {{- end }}
        {{- end }}
        {{- if .Values.postgresql.enabled }}
        - name: postgres
          secret:
            secretName: {{ include "validator.fullname" . }}-postgres
        {{- end }}
        {{- if .Values.indexer.extraVolumes }}
        {{- include "tplvalues.render" ( dict "value" .Values.indexer.extraVolumes "context" $ ) | nindent 8 }}
        {{- end }}
      {{- with .Values.indexer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.indexer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.indexer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
