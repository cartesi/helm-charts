{{- /*
(c) Cartesi and individual authors (see AUTHORS)
SPDX-License-Identifier: Apache-2.0 (see LICENSE)
*/}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "validator.fullname" . }}-graphql-server
  labels: {{- include "validator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.graphqlServer.replicaCount }}
  selector:
    matchLabels:
      {{- include "validator.selectorLabels" . | nindent 6 }}
      rollups.cartesi.io/component: graphql-server
  template:
    metadata:
      labels:
        {{- include "validator.selectorLabels" . | nindent 8 }}
        rollups.cartesi.io/component: graphql-server
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "validator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.graphqlServer.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.graphqlServer.initContainers }}
        {{- include "tplvalues.render" ( dict "value" .Values.graphqlServer.initContainers "context" $ ) | nindent 8 }}
        {{- end }}
      containers:
        - name: graphql-server
          image: {{ include "graphqlServer.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.graphqlServer.resources | nindent 12 }}
          {{- if .Values.graphqlServer.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ default 8085 .Values.graphqlServer.healthCheck.port }}
            initialDelaySeconds: 3
          {{- end }}
          {{- if .Values.graphqlServer.command }}
          command:
          {{- include "tplvalues.render" (dict "value" .Values.graphqlServer.command "context" $) | nindent 12 }}
          {{- end }}
          args:
            {{- if .Values.graphqlServer.healthCheck.enabled }}
            - {{ print "--healthcheck-port=" (default 8085 .Values.graphqlServer.healthCheck.port) | quote }}
            {{- end }}
            {{- range .Values.graphqlServer.args }}
            - {{ . | quote}}
            {{- end }}
            {{- range .Values.graphqlServer.extraArgs }}
            - {{ . | quote}}
            {{- end }}
          env:
            - name: RUST_LOG
              value: {{ .Values.graphqlServer.logLevel }}
            {{- if .Values.graphqlServer.extraEnvVars }}
            {{- include "tplvalues.render" (dict "value" .Values.graphqlServer.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
            - name: GRAPHQL_HOST
              value: "0.0.0.0"
            - name: GRAPHQL_PORT
              value: "4000"
          envFrom:
          {{- if or .Values.graphqlServer.extraEnvVarsCM .Values.graphqlServer.extraEnvVarsSecret }}
            {{- if .Values.graphqlServer.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "tplvalues.render" ( dict "value" .Values.graphqlServer.extraEnvVarsCM "context" $ ) }}
            {{- end }}
            {{- if .Values.graphqlServer.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "tplvalues.render" ( dict "value" .Values.graphqlServer.extraEnvVarsSecret "context" $ ) }}
            {{- end }}
          {{- end }}
          volumeMounts:
            {{- if .Values.graphqlServer.extraVolumeMounts }}
            {{- include "tplvalues.render" ( dict "value" .Values.graphqlServer.extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}
          ports:
            - containerPort: 4000
      {{- with .Values.graphqlServer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.graphqlServer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.graphqlServer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        {{- if .Values.graphqlServer.extraVolumes }}
        {{- include "tplvalues.render" ( dict "value" .Values.graphqlServer.extraVolumes "context" $ ) | nindent 8 }}
        {{- end }}
